/* Autogenerated - do not edit */

#ifndef __test_event_h__
#define __test_event_h__

#include "stdio.h"
typedef struct test_function_out {
	int errorcode;
	int xid;
	struct __sbuf junk;
} test_function_out;
typedef int (EVENTCB_function)(int, void *,
		int,
		struct __sbuf);
int function(EVENTCB_function *, void *,
		int,
		void *);
void free_function_out(void *);

typedef struct test_anotherfunc_out {
	int errorcode;
	int ignore;
	int mytest;
} test_anotherfunc_out;
typedef int (EVENTCB_anotherfunc)(int, void *,
		int,
		int);
int anotherfunc(EVENTCB_anotherfunc *, void *);
void free_anotherfunc_out(void *);

typedef struct test_test_out {
	int errorcode;
	uint32_t xid;
} test_test_out;
typedef int (EVENTCB_test)(int, void *,
		uint32_t);
int test(EVENTCB_test *, void *,
		int);
void free_test_out(void *);

#endif /* __test_event_h__ */
